
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  currencyCode: 'currencyCode',
  country: 'country',
  settings: 'settings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  role: 'role',
  companyId: 'companyId',
  managerId: 'managerId',
  isActive: 'isActive',
  avatarUrl: 'avatarUrl',
  preferences: 'preferences',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  companyId: 'companyId',
  amount: 'amount',
  originalCurrency: 'originalCurrency',
  convertedAmount: 'convertedAmount',
  exchangeRate: 'exchangeRate',
  category: 'category',
  subcategory: 'subcategory',
  description: 'description',
  expenseDate: 'expenseDate',
  receiptUrl: 'receiptUrl',
  receiptData: 'receiptData',
  status: 'status',
  location: 'location',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApprovalWorkflowScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  name: 'name',
  description: 'description',
  rules: 'rules',
  conditions: 'conditions',
  isActive: 'isActive',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ApprovalStepScalarFieldEnum = {
  id: 'id',
  expenseId: 'expenseId',
  approverId: 'approverId',
  stepOrder: 'stepOrder',
  status: 'status',
  comments: 'comments',
  approvedAt: 'approvedAt',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyId: 'companyId',
  type: 'type',
  title: 'title',
  message: 'message',
  data: 'data',
  read: 'read',
  createdAt: 'createdAt'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  expenseId: 'expenseId',
  action: 'action',
  details: 'details',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  EMPLOYEE: 'EMPLOYEE'
};

exports.ExpenseCategory = exports.$Enums.ExpenseCategory = {
  TRAVEL: 'TRAVEL',
  FOOD: 'FOOD',
  OFFICE: 'OFFICE',
  EQUIPMENT: 'EQUIPMENT',
  SOFTWARE: 'SOFTWARE',
  OTHER: 'OTHER'
};

exports.ExpenseStatus = exports.$Enums.ExpenseStatus = {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.ApprovalStatus = exports.$Enums.ApprovalStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  EXPENSE_SUBMITTED: 'EXPENSE_SUBMITTED',
  APPROVAL_REQUIRED: 'APPROVAL_REQUIRED',
  EXPENSE_APPROVED: 'EXPENSE_APPROVED',
  EXPENSE_REJECTED: 'EXPENSE_REJECTED'
};

exports.ActivityAction = exports.$Enums.ActivityAction = {
  LOGIN: 'LOGIN',
  EXPENSE_CREATED: 'EXPENSE_CREATED',
  EXPENSE_APPROVED: 'EXPENSE_APPROVED',
  EXPENSE_REJECTED: 'EXPENSE_REJECTED',
  USER_CREATED: 'USER_CREATED'
};

exports.Prisma.ModelName = {
  Company: 'Company',
  User: 'User',
  Expense: 'Expense',
  ApprovalWorkflow: 'ApprovalWorkflow',
  ApprovalStep: 'ApprovalStep',
  Notification: 'Notification',
  ActivityLog: 'ActivityLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\abhi coding\\SwiftExpense\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\abhi coding\\SwiftExpense\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  ADMIN\n  MANAGER\n  EMPLOYEE\n}\n\nenum ExpenseCategory {\n  TRAVEL\n  FOOD\n  OFFICE\n  EQUIPMENT\n  SOFTWARE\n  OTHER\n}\n\nenum ExpenseStatus {\n  DRAFT\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nenum ApprovalStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nenum NotificationType {\n  EXPENSE_SUBMITTED\n  APPROVAL_REQUIRED\n  EXPENSE_APPROVED\n  EXPENSE_REJECTED\n}\n\nenum ActivityAction {\n  LOGIN\n  EXPENSE_CREATED\n  EXPENSE_APPROVED\n  EXPENSE_REJECTED\n  USER_CREATED\n}\n\nmodel Company {\n  id           String   @id @default(uuid())\n  name         String\n  currencyCode String   @default(\"USD\") @map(\"currency_code\")\n  country      String?\n  settings     String   @default(\"{}\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  users             User[]\n  expenses          Expense[]\n  approvalWorkflows ApprovalWorkflow[]\n  notifications     Notification[]\n\n  @@map(\"companies\")\n}\n\nmodel User {\n  id           String   @id @default(uuid())\n  email        String   @unique\n  passwordHash String   @map(\"password_hash\")\n  firstName    String   @map(\"first_name\")\n  lastName     String   @map(\"last_name\")\n  role         UserRole @default(EMPLOYEE)\n  companyId    String   @map(\"company_id\")\n  managerId    String?  @map(\"manager_id\")\n  isActive     Boolean  @default(true) @map(\"is_active\")\n  avatarUrl    String?  @map(\"avatar_url\")\n  preferences  String   @default(\"{}\") // JSON string for SQLite\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  company          Company            @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  manager          User?              @relation(\"UserManager\", fields: [managerId], references: [id])\n  subordinates     User[]             @relation(\"UserManager\")\n  expenses         Expense[]\n  approvalSteps    ApprovalStep[]\n  notifications    Notification[]\n  activityLogs     ActivityLog[]\n  createdWorkflows ApprovalWorkflow[] @relation(\"WorkflowCreator\")\n\n  @@map(\"users\")\n}\n\nmodel Expense {\n  id               String          @id @default(uuid())\n  employeeId       String          @map(\"employee_id\")\n  companyId        String          @map(\"company_id\")\n  amount           Float\n  originalCurrency String          @map(\"original_currency\")\n  convertedAmount  Float           @map(\"converted_amount\")\n  exchangeRate     Float?          @map(\"exchange_rate\")\n  category         ExpenseCategory\n  subcategory      String?\n  description      String\n  expenseDate      DateTime        @map(\"expense_date\")\n  receiptUrl       String?         @map(\"receipt_url\")\n  receiptData      String?         @map(\"receipt_data\") // JSON string for SQLite\n  status           ExpenseStatus   @default(PENDING)\n  location         String? // JSON string for SQLite\n  tags             String? // JSON string for SQLite compatibility\n  createdAt        DateTime        @default(now()) @map(\"created_at\")\n  updatedAt        DateTime        @updatedAt @map(\"updated_at\")\n\n  // Relations\n  company       Company        @relation(fields: [companyId], references: [id])\n  employee      User           @relation(fields: [employeeId], references: [id])\n  approvalSteps ApprovalStep[]\n  activityLogs  ActivityLog[]\n\n  @@map(\"expenses\")\n}\n\nmodel ApprovalWorkflow {\n  id          String   @id @default(uuid())\n  companyId   String   @map(\"company_id\")\n  name        String\n  description String?\n  rules       String // JSON string for SQLite\n  conditions  String? // JSON string for SQLite\n  isActive    Boolean  @default(true) @map(\"is_active\")\n  createdBy   String   @map(\"created_by\")\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  company Company @relation(fields: [companyId], references: [id])\n  creator User    @relation(\"WorkflowCreator\", fields: [createdBy], references: [id])\n\n  @@map(\"approval_workflows\")\n}\n\nmodel ApprovalStep {\n  id         String         @id @default(uuid())\n  expenseId  String         @map(\"expense_id\")\n  approverId String         @map(\"approver_id\")\n  stepOrder  Int            @map(\"step_order\")\n  status     ApprovalStatus @default(PENDING)\n  comments   String?\n  approvedAt DateTime?      @map(\"approved_at\")\n  createdAt  DateTime       @default(now()) @map(\"created_at\")\n\n  // Relations\n  expense  Expense @relation(fields: [expenseId], references: [id], onDelete: Cascade)\n  approver User    @relation(fields: [approverId], references: [id])\n\n  @@map(\"approval_steps\")\n}\n\nmodel Notification {\n  id        String           @id @default(uuid())\n  userId    String           @map(\"user_id\")\n  companyId String           @map(\"company_id\")\n  type      NotificationType\n  title     String\n  message   String\n  data      String? // JSON string for SQLite\n  read      Boolean          @default(false)\n  createdAt DateTime         @default(now()) @map(\"created_at\")\n\n  // Relations\n  user    User    @relation(fields: [userId], references: [id])\n  company Company @relation(fields: [companyId], references: [id])\n\n  @@map(\"notifications\")\n}\n\nmodel ActivityLog {\n  id        String         @id @default(uuid())\n  userId    String?        @map(\"user_id\")\n  expenseId String?        @map(\"expense_id\")\n  action    ActivityAction\n  details   String? // JSON string for SQLite\n  ipAddress String?        @map(\"ip_address\")\n  userAgent String?        @map(\"user_agent\")\n  createdAt DateTime       @default(now()) @map(\"created_at\")\n\n  // Relations\n  user    User?    @relation(fields: [userId], references: [id])\n  expense Expense? @relation(fields: [expenseId], references: [id])\n\n  @@map(\"activity_logs\")\n}\n",
  "inlineSchemaHash": "e10b636d18d8d1996cf82537301c8d2fb17364640720770a841e0b330b37852d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currencyCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"currency_code\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"CompanyToExpense\"},{\"name\":\"approvalWorkflows\",\"kind\":\"object\",\"type\":\"ApprovalWorkflow\",\"relationName\":\"ApprovalWorkflowToCompany\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"CompanyToNotification\"}],\"dbName\":\"companies\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_id\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"manager_id\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"avatar_url\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"manager\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserManager\"},{\"name\":\"subordinates\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserManager\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"approvalSteps\",\"kind\":\"object\",\"type\":\"ApprovalStep\",\"relationName\":\"ApprovalStepToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"createdWorkflows\",\"kind\":\"object\",\"type\":\"ApprovalWorkflow\",\"relationName\":\"WorkflowCreator\"}],\"dbName\":\"users\"},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employee_id\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"originalCurrency\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"original_currency\"},{\"name\":\"convertedAmount\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"converted_amount\"},{\"name\":\"exchangeRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"exchange_rate\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ExpenseCategory\"},{\"name\":\"subcategory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expense_date\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receipt_url\"},{\"name\":\"receiptData\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"receipt_data\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExpenseStatus\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToExpense\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"approvalSteps\",\"kind\":\"object\",\"type\":\"ApprovalStep\",\"relationName\":\"ApprovalStepToExpense\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToExpense\"}],\"dbName\":\"expenses\"},\"ApprovalWorkflow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rules\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conditions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"ApprovalWorkflowToCompany\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"WorkflowCreator\"}],\"dbName\":\"approval_workflows\"},\"ApprovalStep\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"expense_id\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"approver_id\"},{\"name\":\"stepOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"step_order\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApprovalStatus\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"approved_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ApprovalStepToExpense\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApprovalStepToUser\"}],\"dbName\":\"approval_steps\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"company_id\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToNotification\"}],\"dbName\":\"notifications\"},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"expense_id\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"ActivityAction\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ActivityLogToExpense\"}],\"dbName\":\"activity_logs\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

